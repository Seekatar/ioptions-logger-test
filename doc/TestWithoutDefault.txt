// Without any default
>>>> /api/auth/a
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A'
GetAuthA
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/b-scheme
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'B'
GetAuthBScheme
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-and-b
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A', role = 'B'
SchemeB was not authenticated. Failure message: 'UserA' was not 'UserB'
GetAuthAB
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-and-b
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'A', role = 'B'
GetAuthAB
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-and-b
SchemeA was not authenticated. Failure message: 'UserC' was not 'UserA'
SchemeB was not authenticated. Failure message: 'UserC' was not 'UserB'
AuthenticationScheme: SchemeA was challenged.
AuthenticationScheme: SchemeB was challenged.
>>>> /api/auth/a-or-b
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A'
SchemeB was not authenticated. Failure message: 'UserA' was not 'UserB'
GetAuthAorB
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-or-b
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'B'
GetAuthAorB
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-or-b
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'A', role = 'B'
GetAuthAorB
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/anon
GetAuthAnon
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-role-c
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'C'
GetAuthARoleC
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/any
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A'
SchemeB was not authenticated. Failure message: 'UserA' was not 'UserB'
SchemeC was not authenticated. Failure message: 'UserA' was not 'UserC'
GetAuthAnyRole
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/any
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'B', role = 'C'
SchemeB was not authenticated. Failure message: 'UserA' was not 'UserB'
SchemeC was not authenticated. Failure message: 'UserA' was not 'UserC'
GetAuthAnyRole
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/any
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'C'
SchemeC was not authenticated. Failure message: 'UserB' was not 'UserC'
GetAuthAnyRole
    SchemeA
    SchemeB
    SchemeC
>>>> /api/auth/a-and-b
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A'
SchemeB was not authenticated. Failure message: 'UserA' was not 'UserB'
AuthenticationScheme: SchemeA was forbidden.
AuthenticationScheme: SchemeB was forbidden.
>>>> /api/auth/a-and-b
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'B'
AuthenticationScheme: SchemeA was forbidden.
AuthenticationScheme: SchemeB was forbidden.
>>>> /api/auth/a-or-b
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
SchemeB was authenticated. Set claims on UserB: name = 'B', role = 'C'
AuthenticationScheme: SchemeA was forbidden.
AuthenticationScheme: SchemeB was forbidden.
>>>> /api/auth/a-or-b
SchemeA was not authenticated. Failure message: 'UserC' was not 'UserA'
SchemeB was not authenticated. Failure message: 'UserC' was not 'UserB'
AuthenticationScheme: SchemeA was challenged.
AuthenticationScheme: SchemeB was challenged.
>>>> /api/auth/a-role-c
SchemeA was not authenticated. Failure message: 'UserB' was not 'UserA'
AuthenticationScheme: SchemeA was challenged.
>>>> /api/auth/a-role-c
SchemeA was authenticated. Set claims on UserA: name = 'A', role = 'A'
AuthenticationScheme: SchemeA was forbidden.
>>>> /api/auth/any
SchemeA was not authenticated. Failure message: 'UserZ' was not 'UserA'
SchemeB was not authenticated. Failure message: 'UserZ' was not 'UserB'
SchemeC was not authenticated. Failure message: 'UserZ' was not 'UserC'
AuthenticationScheme: SchemeA was challenged.
AuthenticationScheme: SchemeB was challenged.
AuthenticationScheme: SchemeC was challenged.
>>>> /api/auth/b
[08:16:11 ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
>>>> /api/auth
[08:16:13 ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
>>>> /api/auth
[08:16:15 ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
>>>> /api/auth
[08:16:18 ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
